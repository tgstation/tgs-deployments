name: TGS Deployments Periodic Cleanup

on:
  schedule:
    - cron: 0 0 * * *
  workflow_dispatch:

concurrency:
  group: "periodic-cleanup"

jobs:
  report_version:
    name: Clean up Unresponsive Installations
    runs-on: ubuntu-latest
    steps:
    - name: Setup dotnet
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Tool Checkout
      uses: actions/checkout@v4
      with:
        path: temp_workspace

    - name: Restore
      run: |
        cd temp_workspace
        dotnet restore

    - name: Build
      run: |
        cd temp_workspace/tools/Tgstation.Server.DeploymentsTool
        dotnet publish -c Release -o ${{ runner.temp }}/tool

    - name: Generate App Token
      run: |
        dotnet ${{ runner.temp }}/tool/Tgstation.Server.DeploymentsTool.dll ${{ secrets.TGS_CI_GITHUB_APP_TOKEN_SERIALIZED }} token ${{ runner.temp }}/installation_secret.txt
        echo "INSTALLATION_TOKEN=$(cat ${{ runner.temp }}/installation_secret.txt)" >> $GITHUB_ENV
        rm ${{ runner.temp }}/installation_secret.txt

    - name: Main Checkout
      uses: actions/checkout@v4
      with:
        ref: data
        token: ${{ env.INSTALLATION_TOKEN }}

    - name: Update Deployments
      run: dotnet ${{ runner.temp }}/tool/Tgstation.Server.DeploymentsTool.dll ${{ secrets.TGS_CI_GITHUB_APP_TOKEN_SERIALIZED }} cleanup

    - name: Git Config
      run: |
        git config user.name "tgstation-server-ci[bot]"
        git config user.email "161980869+tgstation-server-ci[bot]@users.noreply.github.com"

    - name: Git Stage
      run: git add .

    - name: Git Commit
      run: |
        git diff-index --quiet HEAD || git commit -m 'Cleanup Telemetry Entries' -m 'Job: ${{ github.run_id }}'

    - name: Git Push
      run: |
        git push -u origin data

